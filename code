import re

def check_password_strength(password):
    # Define the criteria for a strong password
    length_criteria = len(password) >= 8
    uppercase_criteria = bool(re.search(r'[A-Z]', password))
    lowercase_criteria = bool(re.search(r'[a-z]', password))
    number_criteria = bool(re.search(r'\d', password))
    special_criteria = bool(re.search(r'[!@#$%^&*(),.?":{}|<>]', password))

    # Calculate the score
    score = sum([length_criteria, uppercase_criteria, lowercase_criteria, number_criteria, special_criteria])
    strength = ""
    feedback = []

    if length_criteria:
        feedback.append("Password has a good length.")
    else:
        feedback.append("Password should be at least 8 characters long.")

    if uppercase_criteria:
        feedback.append("Password contains uppercase letters.")
    else:
        feedback.append("Password should contain at least one uppercase letter.")

    if lowercase_criteria:
        feedback.append("Password contains lowercase letters.")
    else:
        feedback.append("Password should contain at least one lowercase letter.")

    if number_criteria:
        feedback.append("Password contains numbers.")
    else:
        feedback.append("Password should contain at least one number.")

    if special_criteria:
        feedback.append("Password contains special characters.")
    else:
        feedback.append("Password should contain at least one special character.")

    if score == 5:
        strength = "Very Strong"
    elif score == 4:
        strength = "Strong"
    elif score == 3:
        strength = "Moderate"
    else:
        strength = "Weak"

    return strength, feedback

def main():
    print("------------- Password Strength Checker --------------")
    password = input("Enter a password to check its strength: ")
    strength, feedback = check_password_strength(password)
    print(f"Password strength: {strength}")
    print("Feedback:")
    for comment in feedback:
        print(f"- {comment}")

if __name__ == "__main__":
    main()
